{"version":3,"sources":["components/DepartureList/ListItem/ListItem.jsx","components/DepartureList/DepartureList.jsx","components/ContentBox/ContentBox.jsx","storage/storage.js","components/RealtimeResults/RealtimeResult/Header/Header.jsx","components/RealtimeResults/RealtimeResult/RealtimeResult.jsx","components/RealtimeResults/Options/Options.jsx","components/RealtimeResults/RealtimeResults.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","secondary","marginRight","getIconSuffix","transportMode","ListItem","props","minutes","departure","timeToWalk","classes","ListItemAvatar","Avatar","style","backgroundColor","TransportMode","className","ListItemText","primary","LineNumber","Destination","ListItemSecondaryAction","Typography","variant","MinutesToDeparture","root","marginBottom","spacing","DepartureList","showDestination","showCantCatch","list","listWithTTD","map","displayTime","includes","isNotRealtime","departureTime","moment","now","diff","isNow","split","timeToDeparture","DisplayTime","sortedList","filter","isNaN","canCatch","sort","a","b","List","index","key","margin","minWidth","ContentBox","Card","children","defaults","sites","name","siteId","storage","window","localStorage","set","value","setItem","JSON","stringify","get","getItem","parse","box","padding","textField","width","Header","handleSetTimeToWalk","site","Box","component","TextField","InputProps","startAdornment","InputAdornment","position","endAdornment","inputProps","step","pattern","type","label","id","size","onChange","event","target","listTitle","getDirection","line","JourneyDirection","RealtimeResult","timeWindow","useState","Buses","Trams","realtimeResult","setRealtimeResult","setTimeToWalk","apiUrl","useEffect","axios","result","data","fetchData","departures","concat","intValue","parseInt","valueToSet","newSites","setStorageTimeToWalk","listItem","paddingLeft","paddingRight","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","headingIcon","Options","setTimeWindow","setShowCantCatch","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Select","MenuItem","Switch","edge","color","checked","RealtimeResults","Grid","container","item","xs","md","App","Fragment","CssBaseline","Container","maxWidth","disableGutters","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oSAYMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,YAAa,QAIjB,SAASC,EAAcC,GACrB,MAAsB,QAAlBA,EACK,UACoB,SAAlBA,EACF,SACoB,UAAlBA,EACF,aADF,EAiDMC,MA1Bf,SAAkBC,GAAQ,IARLC,EAVHH,EAmBRI,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,WACbC,EAAUZ,IAChB,OACE,kBAAC,IAAD,KACE,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAO,CAAEC,iBAxBPV,EAwBiCI,EAAUO,cAvBrC,QAAlBX,EACK,UACoB,SAAlBA,EACF,UACoB,UAAlBA,EACF,cADF,KAoBC,uBAAGY,UAAW,UAAYb,EAAcK,EAAUO,mBAGtD,kBAACE,EAAA,EAAD,CACEP,QAAS,CACPT,UAAWS,EAAQT,WAErBiB,QAASV,EAAUW,WACnBlB,UAAWO,EAAUY,cAEvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAClB,2BA1BQ,KADGhB,EA2BKC,EAAUgB,mBAAqBf,GAzB9C,YAEA,YAAWF,EAAU,Y,SChC1BT,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyB,KAAM,CACJC,aAAc1B,EAAM2B,QAAQ,QAmDjBC,MA3Bf,SAAuBtB,GACrB,IAAMI,EAAUZ,IACR+B,EAAqDvB,EAArDuB,gBAAiBC,EAAoCxB,EAApCwB,cAAeC,EAAqBzB,EAArByB,KAAMtB,EAAeH,EAAfG,WACxCuB,EAAcD,EAAKE,KAAI,SAAAzB,GAE3B,OADAA,EAAUgB,mBAxBd,SAAyBU,GACvB,GAV2B,SAAAA,GAAW,OAAIA,EAAYC,SAAS,KAU3DC,CAAcF,GAAc,CAC9B,IAAMG,EAAgBC,IAAOJ,EAAa,SACpCK,EAAMD,MAEZ,OADaD,EAAcG,KAAKD,EAAK,WAGvC,OAfmB,SAAAL,GAAW,MAAoB,OAAhBA,EAe9BO,CAAMP,GACD,EAEFA,EAAYQ,MAAM,KAAK,GAcGC,CAAgBnC,EAAUoC,aAClDpC,KAKHqC,GAHef,EACjBE,EACAA,EAAYc,QAAO,SAAAtC,GAAS,OAhBlC,SAAkBA,EAAWC,GAC3B,QAAIsC,MAAMtC,IAGHD,EAAUgB,mBAAqBf,GAAc,EAYhBuC,CAASxC,EAAWC,OACxBwC,MAC9B,SAACC,EAAGC,GAAJ,OAAUD,EAAE1B,mBAAqB2B,EAAE3B,sBAErC,OACE,kBAAC4B,EAAA,EAAD,CAAMpC,UAAWN,EAAQe,MACtBoB,EAAWZ,KAAI,SAACzB,EAAW6C,GAAZ,OACd,kBAAC,EAAD,CACE5C,WAAYA,EACZ6C,IAAKD,EACL7C,UAAWA,EACXqB,gBAAiBA,S,kBCnDrB/B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyB,KAAM,CACJ8B,OAAQvD,EAAM2B,QAAQ,GACtB6B,SAAU,aASCC,MALf,SAAoBnD,GAClB,IAAMI,EAAUZ,IAChB,OAAO,kBAAC4D,EAAA,EAAD,CAAM1C,UAAWN,EAAQe,MAAOnB,EAAMqD,WCdzCC,EAAW,CACfC,MAAO,CACL,CAAEC,KAAM,iBAAeC,OAAQ,KAAMtD,WAAY,IACjD,CAAEqD,KAAM,WAAYC,OAAQ,KAAMtD,WAAY,IAC9C,CAAEqD,KAAM,sBAAiBC,OAAQ,KAAMtD,WAAY,MAIjDuD,EAAUC,OAAOC,aAEVC,EAAM,SAACb,EAAKc,GAAN,OAAgBJ,EAAQK,QAAQf,EAAKgB,KAAKC,UAAUH,KAE1DI,EAAM,SAAAlB,GACjB,IAAMc,EAAQJ,EAAQS,QAAQnB,GAC9B,OAAc,OAAVc,GACFD,EAAIb,EAAKM,EAASN,IACXM,EAASN,IAEXgB,KAAKI,MAAMN,I,2BCddtE,EAAYC,aAAW,SAAAC,GAC3B,MAAO,CACL2E,IAAK,CACHC,QAAS5E,EAAM2B,QAAQ,IAEzBkD,UAAW,CACTC,MAAO,IACPvB,OAAQ,aAkCCwB,MA7Bf,SAAgBzE,GACd,IAAMI,EAAUZ,IACRkF,EAA0C1E,EAA1C0E,oBAAqBvE,EAAqBH,EAArBG,WAAYwE,EAAS3E,EAAT2E,KACzC,OACE,kBAACC,EAAA,EAAD,CAAKlE,UAAWN,EAAQiE,IAAKQ,UAAU,OACrC,kBAAC7D,EAAA,EAAD,CAAYC,QAAQ,MAAM0D,EAAKnB,MAC/B,kBAACsB,EAAA,EAAD,CACEpE,UAAWN,EAAQmE,UACnBQ,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,uBAAGxE,UAAU,oBAGjByE,aAAc,kBAACF,EAAA,EAAD,CAAgBC,SAAS,OAAzB,WACdE,WAAY,CAAEC,KAAM,IAAKC,QAAS,SAEpCC,KAAK,SACLC,MAAM,gBACNC,GAAI,aAAed,EAAKlB,OACxBK,MAAO3D,EACPc,QAAQ,WACRyE,KAAK,QACLC,SAAU,SAAAC,GAAK,OAAIlB,EAAoBkB,EAAMC,OAAO/B,YC9BtDtE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCoG,UAAW,CACTxB,QAAS,KAAO5E,EAAM2B,QAAQ,GAAK,UAIvC,SAAS0E,EAAaC,GAIpB,GAFwB,CAAC,OAELnE,SAASmE,EAAKnF,YAAa,CAC7C,GAA8B,IAA1BmF,EAAKC,iBACP,OAAO,EACF,GAA8B,IAA1BD,EAAKC,iBACd,OAAO,EAGX,OAAOD,EAAKC,iBA6DCC,MA1Df,SAAwBlG,GACtB,IAAMI,EAAUZ,IACRmF,EAAoC3E,EAApC2E,KAAMwB,EAA8BnG,EAA9BmG,WAAY3E,EAAkBxB,EAAlBwB,cAFG,EAGe4E,mBAAS,CACnDC,MAAO,GACPC,MAAO,KALoB,mBAGtBC,EAHsB,KAGNC,EAHM,OAOOJ,mBAASzB,EAAKxE,YAPrB,mBAOtBA,EAPsB,KAOVsG,EAPU,KAQvBC,EAAS,wCAUfC,qBAAU,WAAM,4CACd,4BAAA/D,EAAA,sEACuBgE,IAAM1C,IACzBwC,EAZU,iBAYS/B,EAAKlB,OAAS,eAAiB0C,GAFtD,OACQU,EADR,OAIEL,EAAkBK,EAAOC,MAJ3B,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACpC,EAAKlB,OAAQ0C,IAEjB,IAAMa,EAAaT,EAAeF,MAAMY,OAAOV,EAAeD,OAC9D,OACE,kBAAC,EAAD,KACE,yBAAK5F,UAAU,kBACb,kBAAC,EAAD,CACEiE,KAAMA,EACND,oBAvBoB,SAAAZ,GAC1B,IAAMoD,EAAWC,SAASrD,EAAO,IAC3BsD,EAAaF,EAAW,GAAKzE,MAAMyE,GAAY,EAAIA,EACzDT,EAAcW,GFtBkB,SAACjH,EAAYsD,GAC/C,IACM4D,EADQnD,EAAI,SACKvC,KAAI,SAAAgD,GACzB,OAAIlB,IAAWkB,EAAKlB,QAClBkB,EAAKxE,WAAaA,EACXwE,GAEAA,KAGXd,EAAI,QAASwD,GEaXC,CAAqBF,EAAYzC,EAAKlB,SAoBhCtD,WAAYA,IAEd,kBAACa,EAAA,EAAD,CAAYN,UAAWN,EAAQ0F,UAAW7E,QAAQ,MAAlD,YAGA,kBAAC,EAAD,CACEO,cAAeA,EACfrB,WAAYA,EACZsB,KAAMuF,EAAWxE,QAAO,SAAAwD,GAAI,OAA2B,IAAvBD,EAAaC,QAE/C,kBAAChF,EAAA,EAAD,CAAYN,UAAWN,EAAQ0F,UAAW7E,QAAQ,MAAlD,aAGA,kBAAC,EAAD,CACEO,cAAeA,EACfrB,WAAYA,EACZsB,KAAMuF,EAAWxE,QAAO,SAAAwD,GAAI,OAA2B,IAAvBD,EAAaC,W,+DC/DjDxG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyB,KAAM,CACJqD,MAAO,QAET+C,SAAU,CACRC,YAAa,EACbC,aAAc,GAEhBC,QAAS,CACPC,SAAUjI,EAAMkI,WAAWC,QAAQ,IACnCC,WAAYpI,EAAMkI,WAAWG,mBAE/BC,YAAa,CACXL,SAAUjI,EAAMkI,WAAWC,QAAQ,IACnCjI,YAAaF,EAAM2B,QAAQ,QA8DhB4G,MA1Df,SAAiBjI,GAAQ,IACfmG,EAA+DnG,EAA/DmG,WAAY+B,EAAmDlI,EAAnDkI,cAAe1G,EAAoCxB,EAApCwB,cAAe2G,EAAqBnI,EAArBmI,iBAC5C/H,EAAUZ,IAChB,OACE,kBAAC,EAAD,KACE,kBAAC4I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAY,uBAAG5H,UAAU,wBACzB6H,gBAAc,mBACd9C,GAAG,mBAEH,kBAACzE,EAAA,EAAD,CAAYN,UAAWN,EAAQsH,SAC7B,uBAAGhH,UAAW,cAAgBN,EAAQ4H,cADxC,qBAIF,kBAACQ,EAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAMpC,UAAWN,EAAQe,MACvB,kBAACpB,EAAA,EAAD,CAAUW,UAAWN,EAAQmH,UAC3B,kBAAC5G,EAAA,EAAD,CAAchB,UAAW,2BACzB,kBAACoB,EAAA,EAAD,KACE,kBAAC0H,EAAA,EAAD,CACE3E,MAAOqC,EACPR,SAAU,SAAAC,GAAK,OAAIsC,EAActC,EAAMC,OAAO/B,SAE9C,kBAAC4E,EAAA,EAAD,CAAU5E,MAAM,MAAhB,cACA,kBAAC4E,EAAA,EAAD,CAAU5E,MAAM,MAAhB,iBAIN,kBAAC/D,EAAA,EAAD,CAAUW,UAAWN,EAAQmH,UAC3B,kBAAC5G,EAAA,EAAD,CAAchB,UAAW,2CACzB,kBAACoB,EAAA,EAAD,KACE,kBAAC4H,EAAA,EAAD,CACEC,KAAK,MACLC,MAAM,UACNC,QAAStH,EACTmE,SAAU,SAAAC,GAAK,OAAIuC,EAAiBvC,EAAMC,OAAOiD,mBCvCpDC,MA1Bf,WAA4B,IAAD,EACW3C,mBAAS,IADpB,mBAClBD,EADkB,KACN+B,EADM,OAEiB9B,oBAAS,GAF1B,mBAElB5E,EAFkB,KAEH2G,EAFG,KAIzB,OACE,kBAACa,EAAA,EAAD,CAAMC,WAAS,EAAC5H,QAAS,GACvB,kBAAC2H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CACEhD,WAAYA,EACZ+B,cAAeA,EACfC,iBAAkBA,KAGrBjE,EAAI,SAASvC,KAAI,SAACgD,EAAM5B,GAAP,OAChB,kBAACiG,EAAA,EAAD,CAAMhG,IAAKD,EAAOmG,MAAI,EAACC,GAAI,GAAIC,GAAG,QAChC,kBAAC,EAAD,CACE5H,cAAeA,EACfmD,KAAMA,EACNwB,WAAYA,U,mBCPTkD,OAbf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,yBAAK7I,UAAU,OACb,kBAAC8I,GAAA,EAAD,CAAWC,SAAS,KAAKC,gBAAgB,GACvC,kBAAC,EAAD,UCEUC,QACW,cAA7BhG,OAAOiG,SAASC,UAEe,UAA7BlG,OAAOiG,SAASC,UAEhBlG,OAAOiG,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.f7cad8a5.chunk.js","sourcesContent":["import React from 'react';\nimport MaterialListItem from '@material-ui/core/ListItem';\nimport {\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  Typography,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  secondary: {\n    marginRight: 80,\n  },\n}));\n\nfunction getIconSuffix(transportMode) {\n  if (transportMode === 'BUS') {\n    return 'bus-alt';\n  } else if (transportMode === 'TRAM') {\n    return 'subway';\n  } else if (transportMode === 'TRAIN') {\n    return 'train';\n  }\n}\n\nfunction getColor(transportMode) {\n  if (transportMode === 'BUS') {\n    return '#b22222';\n  } else if (transportMode === 'TRAM') {\n    return '#4169e1';\n  } else if (transportMode === 'TRAIN') {\n    return 'yellow'; //fix;\n  }\n}\n\nfunction leaveString(minutes) {\n  if (minutes === 0) {\n    return 'Gå nu!';\n  } else {\n    return 'Gå om ' + minutes + ' min';\n  }\n}\n\nfunction ListItem(props) {\n  const { departure, timeToWalk } = props;\n  const classes = useStyles();\n  return (\n    <MaterialListItem>\n      <ListItemAvatar>\n        <Avatar style={{ backgroundColor: getColor(departure.TransportMode) }}>\n          <i className={'fad fa-' + getIconSuffix(departure.TransportMode)}></i>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        classes={{\n          secondary: classes.secondary,\n        }}\n        primary={departure.LineNumber}\n        secondary={departure.Destination}\n      />\n      <ListItemSecondaryAction>\n        <Typography variant=\"body1\">\n          <b>{leaveString(departure.MinutesToDeparture - timeToWalk)}</b>\n        </Typography>\n      </ListItemSecondaryAction>\n    </MaterialListItem>\n  );\n}\n\nexport default ListItem;\n","import React from 'react';\n// import './DepartureList.css';\nimport moment from 'moment';\nimport ListItem from './ListItem/ListItem';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const isNotRealtime = displayTime => displayTime.includes(':');\nexport const isNow = displayTime => displayTime === 'Nu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction timeToDeparture(displayTime) {\n  if (isNotRealtime(displayTime)) {\n    const departureTime = moment(displayTime, 'HH:mm');\n    const now = moment();\n    const diff = departureTime.diff(now, 'minutes');\n    return diff;\n  }\n  if (isNow(displayTime)) {\n    return 0;\n  }\n  return displayTime.split(' ')[0];\n}\n\nfunction canCatch(departure, timeToWalk) {\n  if (isNaN(timeToWalk)) {\n    return true;\n  }\n  return departure.MinutesToDeparture - timeToWalk >= 0;\n}\n\nfunction DepartureList(props) {\n  const classes = useStyles();\n  const { showDestination, showCantCatch, list, timeToWalk } = props;\n  const listWithTTD = list.map(departure => {\n    departure.MinutesToDeparture = timeToDeparture(departure.DisplayTime);\n    return departure;\n  });\n  const canCatchList = showCantCatch\n    ? listWithTTD\n    : listWithTTD.filter(departure => canCatch(departure, timeToWalk));\n  const sortedList = canCatchList.sort(\n    (a, b) => a.MinutesToDeparture - b.MinutesToDeparture,\n  );\n  return (\n    <List className={classes.root}>\n      {sortedList.map((departure, index) => (\n        <ListItem\n          timeToWalk={timeToWalk}\n          key={index}\n          departure={departure}\n          showDestination={showDestination}\n        ></ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default DepartureList;\n","import React from 'react';\nimport './ContentBox.css';\nimport { Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    minWidth: '240px',\n  },\n}));\n\nfunction ContentBox(props) {\n  const classes = useStyles();\n  return <Card className={classes.root}>{props.children}</Card>;\n}\n\nexport default ContentBox;\n","const defaults = {\n  sites: [\n    { name: 'Ekuddsvägen', siteId: 4042, timeToWalk: 10 },\n    { name: 'Finntorp', siteId: 4046, timeToWalk: 15 },\n    { name: 'Saltsjö-Järla', siteId: 9429, timeToWalk: 15 },\n  ],\n};\n\nconst storage = window.localStorage;\n\nexport const set = (key, value) => storage.setItem(key, JSON.stringify(value));\n\nexport const get = key => {\n  const value = storage.getItem(key);\n  if (value === null) {\n    set(key, defaults[key]);\n    return defaults[key];\n  }\n  return JSON.parse(value);\n};\n\nexport const setStorageTimeToWalk = (timeToWalk, siteId) => {\n  const sites = get('sites');\n  const newSites = sites.map(site => {\n    if (siteId === site.siteId) {\n      site.timeToWalk = timeToWalk;\n      return site;\n    } else {\n      return site;\n    }\n  });\n  set('sites', newSites);\n};\n","import React from 'react';\nimport { Typography, TextField, InputAdornment, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => {\n  return {\n    box: {\n      padding: theme.spacing(2),\n    },\n    textField: {\n      width: 145,\n      margin: '8px 0',\n    },\n  };\n});\n\nfunction Header(props) {\n  const classes = useStyles();\n  const { handleSetTimeToWalk, timeToWalk, site } = props;\n  return (\n    <Box className={classes.box} component=\"div\">\n      <Typography variant=\"h4\">{site.name}</Typography>\n      <TextField\n        className={classes.textField}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <i className=\"fas fa-walking\"></i>\n            </InputAdornment>\n          ),\n          endAdornment: <InputAdornment position=\"end\">minuter</InputAdornment>,\n          inputProps: { step: '1', pattern: 'd+\\\\' },\n        }}\n        type=\"number\"\n        label=\"Tid att gå\"\n        id={'timeToWalk' + site.siteId}\n        value={timeToWalk}\n        variant=\"outlined\"\n        size=\"small\"\n        onChange={event => handleSetTimeToWalk(event.target.value)}\n      />\n    </Box>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DeparturesList from '../../DepartureList/DepartureList';\nimport ContentBox from '../../ContentBox/ContentBox';\nimport { setStorageTimeToWalk } from '../../../storage/storage';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header/Header';\n\nconst useStyles = makeStyles(theme => ({\n  listTitle: {\n    padding: '0 ' + theme.spacing(2) + 'px',\n  },\n}));\n\nfunction getDirection(line) {\n  // Some lines have opposite journey direction compared to other lines at same sites for some reason\n  const switchDirection = ['821'];\n\n  if (switchDirection.includes(line.LineNumber)) {\n    if (line.JourneyDirection === 1) {\n      return 2;\n    } else if (line.JourneyDirection === 2) {\n      return 1;\n    }\n  }\n  return line.JourneyDirection;\n}\n\nfunction RealtimeResult(props) {\n  const classes = useStyles();\n  const { site, timeWindow, showCantCatch } = props;\n  const [realtimeResult, setRealtimeResult] = useState({\n    Buses: [],\n    Trams: [],\n  });\n  const [timeToWalk, setTimeToWalk] = useState(site.timeToWalk);\n  const apiUrl = 'https://sl-api-wrapper.herokuapp.com/';\n  const apiPath = 'nextDeparture/';\n\n  const handleSetTimeToWalk = value => {\n    const intValue = parseInt(value, 10);\n    const valueToSet = intValue < 0 || isNaN(intValue) ? 0 : intValue;\n    setTimeToWalk(valueToSet);\n    setStorageTimeToWalk(valueToSet, site.siteId);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios.get(\n        apiUrl + apiPath + site.siteId + '?timewindow=' + timeWindow,\n      );\n      setRealtimeResult(result.data);\n    }\n    fetchData();\n  }, [site.siteId, timeWindow]);\n\n  const departures = realtimeResult.Buses.concat(realtimeResult.Trams);\n  return (\n    <ContentBox>\n      <div className=\"RealtimeResult\">\n        <Header\n          site={site}\n          handleSetTimeToWalk={handleSetTimeToWalk}\n          timeToWalk={timeToWalk}\n        />\n        <Typography className={classes.listTitle} variant=\"h6\">\n          Mot stan\n        </Typography>\n        <DeparturesList\n          showCantCatch={showCantCatch}\n          timeToWalk={timeToWalk}\n          list={departures.filter(line => getDirection(line) === 2)}\n        ></DeparturesList>\n        <Typography className={classes.listTitle} variant=\"h6\">\n          Mot Nacka\n        </Typography>\n        <DeparturesList\n          showCantCatch={showCantCatch}\n          timeToWalk={timeToWalk}\n          list={departures.filter(line => getDirection(line) === 1)}\n        ></DeparturesList>\n      </div>\n    </ContentBox>\n  );\n}\n\nexport default RealtimeResult;\n","import React from 'react';\nimport ContentBox from '../../ContentBox/ContentBox';\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  ListItem,\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  Select,\n  MenuItem,\n  Switch,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  listItem: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  headingIcon: {\n    fontSize: theme.typography.pxToRem(16),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction Options(props) {\n  const { timeWindow, setTimeWindow, showCantCatch, setShowCantCatch } = props;\n  const classes = useStyles();\n  return (\n    <ContentBox>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<i className=\"fad fa-chevron-down\"></i>}\n          aria-controls=\"settings-content\"\n          id=\"settings-header\"\n        >\n          <Typography className={classes.heading}>\n            <i className={'fad fa-cog ' + classes.headingIcon}></i>Inställningar\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n              <ListItemText secondary={'Visa avgångar inom:'} />\n              <ListItemSecondaryAction>\n                <Select\n                  value={timeWindow}\n                  onChange={event => setTimeWindow(event.target.value)}\n                >\n                  <MenuItem value=\"30\">30 minuter</MenuItem>\n                  <MenuItem value=\"60\">60 minuter</MenuItem>\n                </Select>\n              </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem className={classes.listItem}>\n              <ListItemText secondary={'Visa avgångar jag inte hinner till:'} />\n              <ListItemSecondaryAction>\n                <Switch\n                  edge=\"end\"\n                  color=\"primary\"\n                  checked={showCantCatch}\n                  onChange={event => setShowCantCatch(event.target.checked)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      {/* <div className=\"RealtimeResults__option\">Avgångar inom&nbsp;</div>\n      <div className=\"RealtimeResults__option\">\n        <label htmlFor=\"hideToCloseInTime\">\n          Visa avgångar jag inte hinner till&nbsp;\n        </label>\n        <input\n          id=\"hideToCloseInTime\"\n          type=\"checkbox\"\n          onChange={event => setShowCantCatch(event.target.checked)}\n        ></input>\n      </div> */}\n    </ContentBox>\n  );\n}\n\nexport default Options;\n","import React, { useState } from 'react';\nimport RealtimeResult from './RealtimeResult/RealtimeResult';\nimport { get } from '../../storage/storage';\nimport { Grid } from '@material-ui/core';\nimport Options from './Options/Options';\n\nfunction RealtimeResults() {\n  const [timeWindow, setTimeWindow] = useState(30);\n  const [showCantCatch, setShowCantCatch] = useState(false);\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <Options\n          timeWindow={timeWindow}\n          setTimeWindow={setTimeWindow}\n          setShowCantCatch={setShowCantCatch}\n        />\n      </Grid>\n      {get('sites').map((site, index) => (\n        <Grid key={index} item xs={12} md=\"auto\">\n          <RealtimeResult\n            showCantCatch={showCantCatch}\n            site={site}\n            timeWindow={timeWindow}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default RealtimeResults;\n","import React from 'react';\nimport RealtimeResults from './components/RealtimeResults/RealtimeResults';\nimport { CssBaseline, Container } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className=\"App\">\n        <Container maxWidth=\"lg\" disableGutters={true}>\n          <RealtimeResults />\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}