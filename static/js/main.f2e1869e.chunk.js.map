{"version":3,"sources":["components/DepartureList/ListItem/ListItem.tsx","components/DepartureList/DepartureList.tsx","components/ContentBox/ContentBox.tsx","storage/storage.ts","components/RealtimeResults/RealtimeResult/Header/Header.tsx","components/RealtimeResults/RealtimeResult/RealtimeResult.tsx","components/RealtimeResults/Options/Options.tsx","components/RealtimeResults/RealtimeResults.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","secondary","marginRight","getIconSuffix","transportMode","ListItem","minutes","departure","timeToWalk","classes","ListItemAvatar","Avatar","style","backgroundColor","TransportMode","className","ListItemText","primary","LineNumber","Destination","ListItemSecondaryAction","Typography","variant","MinutesToDeparture","root","marginBottom","spacing","DepartureList","props","showCantCatch","list","listWithTTD","map","displayTime","includes","isNotRealtime","departureTime","moment","now","diff","isNow","parseInt","split","timeToDeparture","DisplayTime","sortedList","filter","isNaN","canCatch","sort","a","b","List","index","key","margin","minWidth","ContentBox","children","Card","defaults","sites","name","siteId","storage","window","localStorage","set","value","setItem","JSON","stringify","getSites","getItem","parse","get","box","padding","textField","width","Header","handleSetTimeToWalk","site","Box","component","TextField","InputProps","startAdornment","InputAdornment","position","endAdornment","inputProps","step","pattern","type","label","id","size","onChange","event","target","listTitle","getDirection","JourneyDirection","RealtimeResult","timeWindow","useState","Buses","Trams","realtimeResult","setRealtimeResult","setTimeToWalk","apiUrl","useEffect","axios","result","data","fetchData","departures","concat","intValue","valueToSet","newSites","setStorageTimeToWalk","line","listItem","paddingLeft","paddingRight","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","headingIcon","Options","setTimeWindow","setShowCantCatch","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Select","MenuItem","Switch","edge","color","checked","RealtimeResults","Grid","container","item","xs","md","App","Fragment","CssBaseline","Container","maxWidth","disableGutters","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f2e1869e.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport MaterialListItem from '@material-ui/core/ListItem';\nimport {\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  Typography,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  secondary: {\n    marginRight: 80,\n  },\n}));\n\nfunction getIconSuffix(transportMode: string) {\n  if (transportMode === 'BUS') {\n    return 'bus-alt';\n  } else if (transportMode === 'TRAM') {\n    return 'subway';\n  } else if (transportMode === 'TRAIN') {\n    return 'train';\n  }\n}\n\nfunction getColor(transportMode: string) {\n  if (transportMode === 'BUS') {\n    return '#b22222';\n  } else if (transportMode === 'TRAM') {\n    return '#4169e1';\n  } else if (transportMode === 'TRAIN') {\n    return 'yellow'; //fix;\n  }\n}\n\nfunction leaveString(minutes: number) {\n  if (minutes === 0) {\n    return 'Gå nu!';\n  } else {\n    return 'Gå om ' + minutes + ' min';\n  }\n}\n\ninterface ListItemProps {\n  departure: {\n    TransportMode: string,\n    LineNumber: string,\n    Destination: string,\n    MinutesToDeparture: number,\n  }\n  timeToWalk: number,\n}\n\nconst ListItem: FunctionComponent<ListItemProps> = ({ departure, timeToWalk }) => {\n  const classes = useStyles();\n  return (\n    <MaterialListItem>\n      <ListItemAvatar>\n        <Avatar style={{ backgroundColor: getColor(departure.TransportMode) }}>\n          <i className={'fad fa-' + getIconSuffix(departure.TransportMode)}></i>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        classes={{\n          secondary: classes.secondary,\n        }}\n        primary={departure.LineNumber}\n        secondary={departure.Destination}\n      />\n      <ListItemSecondaryAction>\n        <Typography variant=\"body1\">\n          <b>{leaveString(departure.MinutesToDeparture - timeToWalk)}</b>\n        </Typography>\n      </ListItemSecondaryAction>\n    </MaterialListItem>\n  );\n}\n\nexport default ListItem;\n","import React, { FunctionComponent } from 'react';\nimport moment from 'moment';\nimport ListItem from './ListItem/ListItem';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const isNotRealtime = (displayTime: string) => displayTime.includes(':');\nexport const isNow = (displayTime: string) => displayTime === 'Nu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction timeToDeparture(displayTime: string): number {\n  if (isNotRealtime(displayTime)) {\n    const departureTime = moment(displayTime, 'HH:mm');\n    const now = moment();\n    const diff = departureTime.diff(now, 'minutes');\n    return diff;\n  }\n  if (isNow(displayTime)) {\n    return 0;\n  }\n  return parseInt(displayTime.split(' ')[0], 10);\n}\n\nfunction canCatch(departure: Departure, timeToWalk: number): boolean {\n  if (isNaN(timeToWalk)) {\n    return true;\n  }\n  return departure.MinutesToDeparture - timeToWalk >= 0;\n}\n\nexport interface Departure {\n  TransportMode: string;\n  LineNumber: string;\n  JourneyDirection: number;\n  Destination: string;\n  MinutesToDeparture: number;\n  DisplayTime: string;\n}\n\ninterface DepartureListProps {\n  showCantCatch: boolean;\n  list: Array<Departure>;\n  timeToWalk: number;\n}\n\nconst DepartureList: FunctionComponent<DepartureListProps> = props => {\n  const classes = useStyles();\n  const { showCantCatch, list, timeToWalk } = props;\n  const listWithTTD = list.map(departure => {\n    departure.MinutesToDeparture = timeToDeparture(departure.DisplayTime);\n    return departure;\n  });\n  const canCatchList = showCantCatch\n    ? listWithTTD\n    : listWithTTD.filter(departure => canCatch(departure, timeToWalk));\n  const sortedList = canCatchList.sort(\n    (a, b) => a.MinutesToDeparture - b.MinutesToDeparture,\n  );\n  return (\n    <List className={classes.root}>\n      {sortedList.map((departure, index) => (\n        <ListItem\n          timeToWalk={timeToWalk}\n          key={index}\n          departure={departure}\n        ></ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default DepartureList;\n","import React, { FunctionComponent } from 'react';\nimport { Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    minWidth: '240px',\n  },\n}));\n\nconst ContentBox: FunctionComponent<{}> = ({ children }) => {\n  const classes = useStyles();\n  return <Card className={classes.root}>{children}</Card>;\n};\n\nexport default ContentBox;\n","export interface Site {\n  name: string,\n  siteId: number,\n  timeToWalk: number,\n}\n\nconst defaults = {\n  sites: [\n    { name: 'Ekuddsvägen', siteId: 4042, timeToWalk: 10 },\n    { name: 'Finntorp', siteId: 4046, timeToWalk: 15 },\n    { name: 'Saltsjö-Järla', siteId: 9429, timeToWalk: 15 },\n  ],\n} as {\n  [key: string]: any\n};\n\nconst storage = window.localStorage;\n\nexport const set = (key: string, value: Object) => storage.setItem(key, JSON.stringify(value));\n\nconst get = (key: string) => {\n  const value = storage.getItem(key);\n  if (value === null) {\n    set(key, defaults[key]);\n    return defaults[key];\n  }\n  return JSON.parse(value);\n};\n\nexport const getSites = (): Array<Site> => {\n  return get('sites');\n}\n\nexport const setStorageTimeToWalk = (timeToWalk: number, siteId: number) => {\n  const sites = getSites();\n  const newSites = sites.map(site => {\n    if (siteId === site.siteId) {\n      site.timeToWalk = timeToWalk;\n      return site;\n    } else {\n      return site;\n    }\n  });\n  set('sites', newSites);\n};\n","import React, { FunctionComponent } from 'react';\nimport { Typography, TextField, InputAdornment, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Site } from '../../../../storage/storage';\n\nconst useStyles = makeStyles(theme => {\n  return {\n    box: {\n      padding: theme.spacing(2),\n    },\n    textField: {\n      width: 145,\n      margin: '8px 0',\n    },\n  };\n});\n\ninterface HeaderProps {\n  handleSetTimeToWalk: Function;\n  timeToWalk: number;\n  site: Site;\n}\n\nconst Header: FunctionComponent<HeaderProps> = props => {\n  const classes = useStyles();\n  const { handleSetTimeToWalk, timeToWalk, site } = props;\n  return (\n    <Box className={classes.box} component=\"div\">\n      <Typography variant=\"h4\">{site.name}</Typography>\n      <TextField\n        className={classes.textField}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <i className=\"fas fa-walking\"></i>\n            </InputAdornment>\n          ),\n          endAdornment: <InputAdornment position=\"end\">minuter</InputAdornment>,\n          inputProps: { step: '1', pattern: 'd+\\\\' },\n        }}\n        type=\"number\"\n        label=\"Tid att gå\"\n        id={'timeToWalk' + site.siteId}\n        value={timeToWalk}\n        variant=\"outlined\"\n        size=\"small\"\n        onChange={event => handleSetTimeToWalk(event.target.value)}\n      />\n    </Box>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, FunctionComponent } from 'react';\nimport axios from 'axios';\nimport DeparturesList, { Departure } from '../../DepartureList/DepartureList';\nimport ContentBox from '../../ContentBox/ContentBox';\nimport { setStorageTimeToWalk, Site } from '../../../storage/storage';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header/Header';\n\nconst useStyles = makeStyles(theme => ({\n  listTitle: {\n    padding: '0 ' + theme.spacing(2) + 'px',\n  },\n}));\n\nfunction getDirection(departure: Departure) {\n  // Some lines have opposite journey direction compared to other lines at same sites for some reason\n  const switchDirection = ['821'];\n\n  if (switchDirection.includes(departure.LineNumber)) {\n    if (departure.JourneyDirection === 1) {\n      return 2;\n    } else if (departure.JourneyDirection === 2) {\n      return 1;\n    }\n  }\n  return departure.JourneyDirection;\n}\n\ninterface RealtimeResultProps {\n  site: Site;\n  timeWindow: number;\n  showCantCatch: boolean;\n}\n\nconst RealtimeResult: FunctionComponent<RealtimeResultProps> = props => {\n  const classes = useStyles();\n  const { site, timeWindow, showCantCatch } = props;\n  const [realtimeResult, setRealtimeResult] = useState({\n    Buses: [],\n    Trams: [],\n  });\n  const [timeToWalk, setTimeToWalk] = useState(site.timeToWalk);\n  const apiUrl = 'https://sl-api-wrapper.herokuapp.com/';\n  const apiPath = 'nextDeparture/';\n\n  const handleSetTimeToWalk = (value: string) => {\n    const intValue = parseInt(value, 10);\n    const valueToSet = intValue < 0 || isNaN(intValue) ? 0 : intValue;\n    setTimeToWalk(valueToSet);\n    setStorageTimeToWalk(valueToSet, site.siteId);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios.get(\n        apiUrl + apiPath + site.siteId + '?timewindow=' + timeWindow,\n      );\n      setRealtimeResult(result.data);\n    }\n    fetchData();\n  }, [site.siteId, timeWindow]);\n\n  const departures = realtimeResult.Buses.concat(\n    realtimeResult.Trams,\n  ) as Departure[];\n  return (\n    <ContentBox>\n      <div className=\"RealtimeResult\">\n        <Header\n          site={site}\n          handleSetTimeToWalk={handleSetTimeToWalk}\n          timeToWalk={timeToWalk}\n        />\n        <Typography className={classes.listTitle} variant=\"h6\">\n          Mot stan\n        </Typography>\n        <DeparturesList\n          showCantCatch={showCantCatch}\n          timeToWalk={timeToWalk}\n          list={departures.filter(line => getDirection(line) === 2)}\n        ></DeparturesList>\n        <Typography className={classes.listTitle} variant=\"h6\">\n          Mot Nacka\n        </Typography>\n        <DeparturesList\n          showCantCatch={showCantCatch}\n          timeToWalk={timeToWalk}\n          list={departures.filter(line => getDirection(line) === 1)}\n        ></DeparturesList>\n      </div>\n    </ContentBox>\n  );\n};\n\nexport default RealtimeResult;\n","import React, { FunctionComponent } from 'react';\nimport ContentBox from '../../ContentBox/ContentBox';\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  ListItem,\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  Select,\n  MenuItem,\n  Switch,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  listItem: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  headingIcon: {\n    fontSize: theme.typography.pxToRem(16),\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface OptionProps {\n  timeWindow: number;\n  setTimeWindow: Function;\n  showCantCatch: boolean;\n  setShowCantCatch: Function;\n}\n\nconst Options: FunctionComponent<OptionProps> = props => {\n  const { timeWindow, setTimeWindow, showCantCatch, setShowCantCatch } = props;\n  const classes = useStyles();\n  return (\n    <ContentBox>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<i className=\"fad fa-chevron-down\"></i>}\n          aria-controls=\"settings-content\"\n          id=\"settings-header\"\n        >\n          <Typography className={classes.heading}>\n            <i className={'fad fa-cog ' + classes.headingIcon}></i>Inställningar\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n              <ListItemText secondary={'Visa avgångar inom:'} />\n              <ListItemSecondaryAction>\n                <Select\n                  value={timeWindow}\n                  onChange={event => setTimeWindow(event.target.value)}\n                >\n                  <MenuItem value=\"30\">30 minuter</MenuItem>\n                  <MenuItem value=\"60\">60 minuter</MenuItem>\n                </Select>\n              </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem className={classes.listItem}>\n              <ListItemText secondary={'Visa avgångar jag inte hinner till:'} />\n              <ListItemSecondaryAction>\n                <Switch\n                  edge=\"end\"\n                  color=\"primary\"\n                  checked={showCantCatch}\n                  onChange={event => setShowCantCatch(event.target.checked)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </ContentBox>\n  );\n};\n\nexport default Options;\n","import React, { useState } from 'react';\nimport RealtimeResult from './RealtimeResult/RealtimeResult';\nimport { getSites } from '../../storage/storage';\nimport { Grid } from '@material-ui/core';\nimport Options from './Options/Options';\n\nfunction RealtimeResults() {\n  const [timeWindow, setTimeWindow] = useState(30);\n  const [showCantCatch, setShowCantCatch] = useState(false);\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <Options\n          timeWindow={timeWindow}\n          setTimeWindow={setTimeWindow}\n          setShowCantCatch={setShowCantCatch}\n          showCantCatch={showCantCatch}\n        />\n      </Grid>\n      {getSites().map((site, index) => (\n        <Grid key={index} item xs={12} md=\"auto\">\n          <RealtimeResult\n            showCantCatch={showCantCatch}\n            site={site}\n            timeWindow={timeWindow}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default RealtimeResults;\n","import React from 'react';\nimport RealtimeResults from './components/RealtimeResults/RealtimeResults';\nimport { CssBaseline, Container } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className=\"App\">\n        <Container maxWidth=\"lg\" disableGutters={true}>\n          <RealtimeResults />\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}